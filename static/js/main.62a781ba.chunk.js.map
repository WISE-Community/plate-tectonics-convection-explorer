{"version":3,"sources":["components/backgrounds/convection.svg","components/backgrounds/continental-continental.svg","components/backgrounds/continental-continental-convergent1.svg","components/backgrounds/continental-continental-convergent2.svg","components/backgrounds/continental-continental-convergent3.svg","components/backgrounds/continental-continental-convergent4.svg","components/backgrounds/continental-continental-divergent1.svg","components/backgrounds/continental-continental-divergent2.svg","components/backgrounds/continental-continental-divergent3.svg","components/backgrounds/continental-continental-divergent4.svg","components/backgrounds/convergent.svg","components/backgrounds/divergent.svg","components/backgrounds/retry.svg","components/backgrounds/start.svg","components/StyledComponents.js","State.js","components/Background.js","components/Button.js","components/ControlPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppWrapper","styled","div","props","css","maxWidth","maxHeight","Label","p","ButtonLabel","INIT_PLATE_STATES","END_PLATE_STATES","BOUNDARY_STATES","STATE_TEXT","cc","c","d","ccd","ccc","SCREEN_STATES","LABELS","backgroundForState","state","frame","CC","CCC1","CCC2","CCC3","CCC4","CCD1","CCD2","CCD3","CCD4","boundaryForState","C","D","Background","hide","isConvergent","boundaryState","leftConvectionClass","rightConvectionClass","hideConvection","hidePlateState","plateState","className","Fragment","src","Convection","alt","Button","style","disabled","selected","backgroundImage","background","borderColor","onClick","children","ControlPanel","map","type","key","App","useState","selectedExample","selectExample","setPlateState","setBoundaryState","screenState","setScreenState","animationFrame","setAnimationFrame","queryParams","URLSearchParams","window","location","search","widthParam","Number","get","onControlButtonClicked","canStart","includes","onStartRetryClicked","console","log","useEffect","setTimeout","startRetryButton","Start","Retry","hidden","aria-label","showDefaultMode","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62a781ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/convection.1ebc75f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental.774f968a.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent1.2c51b76b.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent2.29e13865.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent3.dcdbff75.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-convergent4.7e18e5f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent1.f320cbed.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent2.a86761e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent3.4d8552b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/continental-continental-divergent4.59bc3277.svg\";","module.exports = __webpack_public_path__ + \"static/media/convergent.441179de.svg\";","module.exports = __webpack_public_path__ + \"static/media/divergent.3e4781b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/retry.b4728a91.svg\";","module.exports = __webpack_public_path__ + \"static/media/start.668f985f.svg\";","import styled, { css } from 'styled-components';\n\nconst AppWrapper = styled.div`\n  ${(props) => {\n    return css`\n      max-width: ${`${props.maxWidth}px`};\n      max-height: ${`${props.maxHeight}px`};\n    `;\n  }}\n`;\n\nconst Label = styled.p`\n  ${(props) => {\n    return css`\n      @media (min-width: ${props.maxWidth}px) {\n        font-size: ${(props.maxWidth / 1200) * 1.7}rem;\n      }\n    `;\n  }}\n`;\n\nconst ButtonLabel = styled.p`\n  ${(props) => {\n    return css`\n      @media (min-width: ${props.maxWidth}px) {\n        font-size: ${(props.maxWidth / 1200) * 1.25}rem;\n      }\n    `;\n  }}\n`;\n\nexport { AppWrapper, Label, ButtonLabel };\n","import CC from './components/backgrounds/continental-continental.svg';\nimport CCC1 from './components/backgrounds/continental-continental-convergent1.svg';\nimport CCC2 from './components/backgrounds/continental-continental-convergent2.svg';\nimport CCC3 from './components/backgrounds/continental-continental-convergent3.svg';\nimport CCC4 from './components/backgrounds/continental-continental-convergent4.svg';\nimport CCD1 from './components/backgrounds/continental-continental-divergent1.svg';\nimport CCD2 from './components/backgrounds/continental-continental-divergent2.svg';\nimport CCD3 from './components/backgrounds/continental-continental-divergent3.svg';\nimport CCD4 from './components/backgrounds/continental-continental-divergent4.svg';\nimport C from './components/backgrounds/convergent.svg';\nimport D from './components/backgrounds/divergent.svg';\n\nexport const MIN_INPUT_LENGTH = 3;\nexport const INIT_PLATE_STATES = ['cc'];\nexport const END_PLATE_STATES = ['ccd', 'ccc'];\nexport const BOUNDARY_STATES = ['c', 'd'];\nexport const STATE_TEXT = {\n  cc: 'Continental-continental',\n  c: 'Convergent boundary',\n  d: 'Divergent boundary',\n  ccd: 'A rift',\n  ccc: 'Mountains',\n};\nexport const SCREEN_STATES = {\n  realExampleSelection: 1,\n  plateSelection: 2,\n  canStart: 3,\n  canRetry: 4,\n  canRestart: 5\n};\nexport const LABELS = {\n  crust: 'Crust',\n  mantle: 'Mantle',\n  core: `Earth's Core`,\n  hot: 'Heat',\n  cold: 'Cold'\n};\n\nexport function backgroundForState(state, frame) {\n  switch (state) {\n    case 'cc':\n      return CC;\n    case 'ccc':\n      switch (frame) {\n        case 1:\n          return CCC1;\n        case 2:\n          return CCC2;\n        case 3:\n          return CCC3;\n        case 4:\n          return CCC4;\n        default:\n          return null;\n      }\n    case 'ccd':\n      switch (frame) {\n        case 1:\n          return CCD1;\n        case 2:\n          return CCD2;\n        case 3:\n          return CCD3;\n        case 4:\n          return CCD4;\n        default:\n          return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport function boundaryForState(state) {\n  switch (state) {\n    case 'c':\n      return C;\n    case 'd':\n      return D;\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  INIT_PLATE_STATES,\n  END_PLATE_STATES,\n  BOUNDARY_STATES,\n  LABELS,\n  STATE_TEXT,\n  backgroundForState\n} from '../State';\nimport Convection from './backgrounds/convection.svg';\nimport { Label } from './StyledComponents';\n\nBackground.propTypes = {\n  hide: PropTypes.bool,\n  plateState: PropTypes.oneOf(['', ...INIT_PLATE_STATES, ...END_PLATE_STATES]),\n  boundaryState: PropTypes.oneOf(['', ...BOUNDARY_STATES]),\n  frame: PropTypes.number,\n  maxWidth: PropTypes.number\n};\n\nfunction Background(props) {\n  if (props.hide) return null;\n\n  const isConvergent = props.boundaryState === 'c';\n  const leftConvectionClass = isConvergent ? 'RotateCW' : 'RotateCCW';\n  const rightConvectionClass = isConvergent ? 'RotateCCW' : 'RotateCW';\n  const hideConvection = props.boundaryState === '';\n  const hidePlateState = props.plateState === '';\n\n  return (\n    <div className=\"BackgroundContainer\">\n      {hideConvection ? null : (\n        <React.Fragment>\n          <img\n            className={`Convection ConvectionLeft ${leftConvectionClass}`}\n            src={Convection}\n            alt={`${isConvergent ? 'Clockwise' : 'Counter-clockwise'} convection current`}\n          />\n          <img\n            className={`Convection ConvectionRight ${rightConvectionClass}`}\n            src={Convection}\n            alt={`${isConvergent ? 'Counter-clockwise' : 'Clockwise'} convection current`}\n          />\n          {isConvergent ? (\n            <React.Fragment>\n              <Label maxWidth={props.maxWidth} className=\"HeatLabel Hot HeatBottom HeatLeft\">{LABELS.hot}</Label>\n              <Label maxWidth={props.maxWidth} className=\"HeatLabel Hot HeatBottom HeatRight\">{LABELS.hot}</Label>\n              <Label maxWidth={props.maxWidth} className=\"HeatLabel Cold HeatTop HeatCenter\">{LABELS.cold}</Label>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Label maxWidth={props.maxWidth} className=\"HeatLabel Cold HeatTop HeatLeft\">{LABELS.cold}</Label>\n              <Label maxWidth={props.maxWidth} className=\"HeatLabel Cold HeatTop HeatRight\">{LABELS.cold}</Label>\n              <Label maxWidth={props.maxWidth} className=\"HeatLabel Hot HeatBottom HeatCenter\">{LABELS.hot}</Label>\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      )}\n\n      {hidePlateState ? null : (\n        <React.Fragment>\n          <Label maxWidth={props.maxWidth} className=\"Label LabelLeft\">{LABELS.crust}</Label>\n          <Label maxWidth={props.maxWidth} className=\"Label LabelRight\">{LABELS.crust}</Label>\n          <Label maxWidth={props.maxWidth} className=\"Label LabelMantle\">{LABELS.mantle}</Label>\n          <Label maxWidth={props.maxWidth} className=\"Label LabelCore\">{LABELS.core}</Label>\n          <img\n            className=\"Background\"\n            src={backgroundForState(props.plateState, props.frame)}\n            alt={`${STATE_TEXT[props.plateState]} plate boundary`}\n          />\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nexport default Background;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nButton.propTypes = {\n  hide: PropTypes.bool,\n  selected: PropTypes.bool,\n  background: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  style: PropTypes.object\n};\n\nfunction Button(props) {\n  if (props.hide) return null;\n  const style = props.style ? props.style : null;\n  return (\n    <button\n      className={`Button ${props.disabled ? '' : 'ButtonClickable'}\n          ${props.selected ? 'SelectedButton' : ''}`}\n      style={{\n        backgroundImage: props.background ? `url(${props.background})` : null,\n        borderColor: props.selected ? '#CC0066' : '#333333',\n        ...style\n      }}\n      onClick={props.disabled ? null : props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport { ButtonLabel } from './StyledComponents';\nimport {\n  BOUNDARY_STATES,\n  STATE_TEXT,\n  boundaryForState\n} from '../State';\n\nControlPanel.propTypes = {\n  onClick: PropTypes.func,\n  hide: PropTypes.bool,\n  boundaryState: PropTypes.oneOf(['', ...BOUNDARY_STATES]),\n  maxWidth: PropTypes.number\n};\n\nfunction ControlPanel(props) {\n  if (props.hide) return null;\n\n  return (\n    <React.Fragment>\n      <div className=\"BoundaryButtons\">\n        {BOUNDARY_STATES.map((state) =>\n          boundaryButtonOfType(props.boundaryState, state, props.onClick, props.maxWidth)\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\nfunction boundaryButtonOfType(boundaryState, type, onClick, maxWidth) {\n  return (\n    <Button key={type} onClick={() => onClick(type)} selected={boundaryState === type}>\n      <img src={boundaryForState(type)} alt={`${STATE_TEXT[type]}`} />\n      <ButtonLabel maxWidth={maxWidth}>{STATE_TEXT[type]}</ButtonLabel>\n    </Button>\n  );\n}\n\nexport default ControlPanel;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { AppWrapper } from './components/StyledComponents';\nimport Background from './components/Background';\nimport ControlPanel from './components/ControlPanel';\nimport {\n  BOUNDARY_STATES,\n  INIT_PLATE_STATES,\n  SCREEN_STATES,\n  END_PLATE_STATES\n} from './State';\nimport Retry from './components/backgrounds/retry.svg';\nimport Start from './components/backgrounds/start.svg';\n\nfunction App() {\n  const [selectedExample, selectExample] = useState('');\n  const [plateState, setPlateState] = useState('cc');\n  const [boundaryState, setBoundaryState] = useState('');\n  const [screenState, setScreenState] = useState('');\n  const [animationFrame, setAnimationFrame] = useState(1);\n  const queryParams = new URLSearchParams(window.location.search);\n  const widthParam = Number(queryParams.get('maxWidth'));\n  const maxWidth = widthParam ? widthParam : 1200;\n  const maxHeight = maxWidth * 2/3;\n\n  useEffect(() => {\n    if (!END_PLATE_STATES.includes(plateState))\n      //start countdown when results are showing\n      return;\n    if (animationFrame !== 4) setTimeout(() => setAnimationFrame(animationFrame + 1), 500);\n  });\n\n  function onExampleButtonClicked(type) {\n    selectExample(type);\n    setScreenState(SCREEN_STATES.plateSelection);\n    setPlateState('');\n    setBoundaryState('');\n  }\n\n  function onControlButtonClicked(type) {\n    let canStart;\n    setPlateState('cc');\n    if (INIT_PLATE_STATES.includes(type)) {\n      setPlateState(type);\n      canStart = boundaryState !== '';\n    } else if (BOUNDARY_STATES.includes(type)) {\n      setBoundaryState(type);\n      canStart = plateState !== '';\n    }\n\n    //can start\n    if (canStart) {\n      setScreenState(SCREEN_STATES.canStart);\n    }\n  }\n\n  function onStartRetryClicked() {\n    switch (screenState) {\n      case SCREEN_STATES.canStart:\n        const endState = plateState + boundaryState;\n        setPlateState(endState);\n        setScreenState(SCREEN_STATES.canRestart);\n        break;\n      case SCREEN_STATES.canRetry:\n        onExampleButtonClicked(selectedExample);\n        break;\n      default:\n        console.log('StartRestartButton clicked in invalid state');\n    }\n    setAnimationFrame(1);\n  }\n\n  function showDefaultMode() {\n    let startRetryButton = null;\n    if (screenState === SCREEN_STATES.canStart) startRetryButton = Start;\n    else if (screenState === SCREEN_STATES.canRetry) startRetryButton = Retry;\n    return (\n      <AppWrapper maxWidth={maxWidth} maxHeight={maxHeight} className=\"App\">\n        <ControlPanel\n          onClick={onControlButtonClicked}\n          boundaryState={boundaryState}\n          maxWidth={maxWidth}\n        />\n        <div className=\"ControlButtons\" hidden={screenState === SCREEN_STATES.realExampleSelection}>\n          <button\n            onClick={onStartRetryClicked}\n            aria-label=\"Play\"\n            hidden={\n              screenState !== SCREEN_STATES.canStart && screenState !== SCREEN_STATES.canRetry\n            }\n          >\n            <img className=\"ResizingButtons\" src={startRetryButton} alt=\"Play\" />\n          </button>\n        </div>\n        <Background\n          plateState={plateState}\n          boundaryState={boundaryState}\n          frame={animationFrame}\n          maxWidth={maxWidth}\n        />\n      </AppWrapper>\n    );\n  }\n\n  return showDefaultMode();\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}